package com.interactive360.brentbrown;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.androidsurya.customviews.PullToRefreshListView;
import com.androidsurya.customviews.PullToRefreshListView.OnRefreshListener;
import com.interactive360.brentbrown.GarageFragment.GetDataTask;

import adapter.VehicleListAdapter;
import android.os.AsyncTask;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.widget.DrawerLayout;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListView;

public class ShowroomFragment extends Fragment {

	PullToRefreshListView VehicleGarageList;
	private List<String> mListItems;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		// return super.onCreateView(inflater, container, savedInstanceState);

		View rootView = inflater.inflate(R.layout.fragment_showroom_screen,
				container, false);
		
		mListItems = new ArrayList<String>();
		mListItems.addAll(Arrays.asList(mStrings));
		
		
		VehicleGarageList= (PullToRefreshListView) rootView.findViewById(android.R.id.list); 
		VehicleGarageList.setOnRefreshListener(new OnRefreshListener() {
			
			@Override
			public void onRefresh() {
				new GetDataTask().execute();
			}
		} );

		mListItems = new ArrayList<String>();
		mListItems.addAll(Arrays.asList(mStrings));
		VehicleGarageList.setAdapter(new VehicleListAdapter(getActivity().getApplicationContext(),true, mListItems));
		
		
		/*VehicleGarageList = (ListView) rootView.findViewById(R.id.listVehicle);
		VehicleGarageList.setAdapter(new VehicleListAdapter(getActivity(),
				false, mListItems));
		((HomeScreen)getActivity()).mSearchDrawLayout = (DrawerLayout)rootView.findViewById(R.id.drawer_layout);
		((HomeScreen)getActivity()).mSearchDrawLayout.closeDrawers();*/
		return rootView;
	}


	private class GetDataTask extends AsyncTask<Void, Void, String[]> {

		@Override
		protected String[] doInBackground(Void... params) {
			// Simulates a background job.
			try {
				Thread.sleep(1000);
			} catch (InterruptedException e) {

			}
			return mStrings;
		}

		@Override
		protected void onPostExecute(String[] result) {
			mListItems.add(0, "Added 1 ...");
			mListItems.add(0, "Added 2 ...");
			mListItems.add(0, "Added 3 ...");
			
			Log.v("TAG","Added items after refresh..");
			// Call onRefreshComplete when the list has been refreshed.
			list.onRefreshComplete();

			super.onPostExecute(result);
		}
	}

	private String[] mStrings = { "Showroom1",
			"Show room2", "Showroom3"};
	
}
